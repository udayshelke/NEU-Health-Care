/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.PharmacyTransportation;

import NUHealthCare.JobQueue.OrderJob;
import NUHealthCare.Map.MapViewer;
import NUHealthCare.Map.SMS;
import NUHealthCare.Map.SendEmail;
import NUHealthCare.Order.ItemList;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author Rishabh,Uday,Aditi
 */
public class TransportProcessRequest extends javax.swing.JPanel {

    private JPanel jPanel;
    private OrderJob orderItemRequest;

    /**
     * Creates new form TransportProcessRequest
     */
    public TransportProcessRequest(JPanel jPanel, OrderJob fundRequest) {
        initComponents();
        this.jPanel = jPanel;
        this.orderItemRequest = fundRequest;
        txtAmount.setText(String.valueOf(orderItemRequest.getOrder().getAmount()));
        txtLocation.setText(orderItemRequest.getVisitReason());
        txtPopulation.setText(String.valueOf(orderItemRequest.getOrderMsg()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDeliver = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        txtLocation = new javax.swing.JTextField();
        txtMessage = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPopulation = new javax.swing.JTextField();
        btnReject = new javax.swing.JButton();
        btnMap = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));

        btnDeliver.setBackground(new java.awt.Color(153, 0, 0));
        btnDeliver.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDeliver.setForeground(new java.awt.Color(255, 255, 255));
        btnDeliver.setText("Deliver");
        btnDeliver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliverActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Transport Work Area");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Order Message");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Delivery Message");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Amount");

        txtAmount.setEnabled(false);

        txtLocation.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Address");

        txtPopulation.setEnabled(false);

        btnReject.setBackground(new java.awt.Color(153, 0, 0));
        btnReject.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnReject.setForeground(new java.awt.Color(255, 255, 255));
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        btnMap.setBackground(new java.awt.Color(153, 0, 0));
        btnMap.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMap.setForeground(new java.awt.Color(255, 255, 255));
        btnMap.setText("View Directions");
        btnMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMapActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/Assets/NU_Health_footer.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(27, 27, 27))
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(503, 503, 503)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDeliver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPopulation, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addComponent(jLabel1))
                .addGap(5, 5, 5)
                .addComponent(btnMap)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPopulation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeliver, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeliverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliverActionPerformed

        btnDeliver.setEnabled(true);
        String message = txtMessage.getText();
        String sub = "Your Order is delivered";
        String odrderDtl = "Order Details\n*************************************************\n";
        if (message.equals("")) {
            JOptionPane.showMessageDialog(null, "Message is mandatory!");
            return;
        } else {
            orderItemRequest.setMessage(message);
            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to proceed?");
            if (dialogResult == JOptionPane.YES_OPTION) {
                orderItemRequest.setStatus("Accepted");
                try {

                    List<ItemList> itm = orderItemRequest.getOrder().getItemList();
                    for (ItemList i : itm) {
                        odrderDtl = odrderDtl + "Item: " + i.getItem() + " , Quantity: " + i.getQuantity() + ", Item Price: $" + i.getTotal() + "\n";
                    }
                    odrderDtl = odrderDtl + "*************************************************\n";
                    odrderDtl = odrderDtl + "\n\nTotal Price: $" + orderItemRequest.getOrder().getAmount();
                    SendEmail.send(orderItemRequest.getHospitalAdmin().getEmployee().getEmpEmail(), "\nHi " + orderItemRequest.getHospitalAdmin().getEmployee().getEmpName() + "," + "\n\nYour Order# " + orderItemRequest.getOrder().getItemID()
                            + " is delivered by: " + orderItemRequest.getReceiver().getEmployee().getEmpName()
                            + "\n\n\n\n" + odrderDtl + "\n\nThanks,\n", sub);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Email Sent");
                    System.out.println(ex.getMessage());
                }
                //Send SMS
                try {
                    SMS.SendSMS("+18573138300", "Hi " + orderItemRequest.getHospitalAdmin().getEmployee().getEmpName() + "," + "\nYour order# : " + orderItemRequest.getOrder().getItemID() + " is delivered!"
                            + "\n\nThanks");
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                }
                //Send SMS end
                JOptionPane.showMessageDialog(null, "Order Delivered Successfully!!!");
                btnDeliver.setEnabled(false);
                txtMessage.setText("");
                btnReject.setEnabled(false);
            }
            txtMessage.setText("");
        }
    }//GEN-LAST:event_btnDeliverActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        jPanel.remove(this);
        Component[] componentArray = jPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        TransportationWorkArea dwjp = (TransportationWorkArea) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) jPanel.getLayout();
        layout.previous(jPanel);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed

        String message = txtMessage.getText();
        String sub = "Your Order is Rejected";
        String odrderDtl = "Order Details\n*************************************************\n";
        if (message.equals("")) {
            JOptionPane.showMessageDialog(null, "Message is mandatory!");
            return;
        } else {
            orderItemRequest.setMessage(message);
            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to proceed?");

            if (dialogResult == JOptionPane.YES_OPTION) {
                orderItemRequest.setStatus("Rejected");
                try {

                    List<ItemList> itm = orderItemRequest.getOrder().getItemList();
                    for (ItemList i : itm) {
                        odrderDtl = odrderDtl + "Item: " + i.getItem() + " , Quantity: " + i.getQuantity() + ", Item Price: $" + i.getTotal() + "\n";
                    }
                    odrderDtl = odrderDtl + "*************************************************\n";
                    odrderDtl = odrderDtl + "\n\nTotal Price: $" + orderItemRequest.getOrder().getAmount();
                    SendEmail.send(orderItemRequest.getHospitalAdmin().getEmployee().getEmpEmail(), "\nHi " + orderItemRequest.getHospitalAdmin().getEmployee().getEmpName() + "," + "\n\nYour Order# " + orderItemRequest.getOrder().getItemID()
                            + " is Rejected by: " + orderItemRequest.getReceiver().getEmployee().getEmpName() + "\nMessage: " + message
                            + "\n\n\n\n" + odrderDtl + "\n\nThanks,\n", sub);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Email Sent");
                    System.out.println(ex.getMessage());
                }
                //Send SMS
                try {
                    SMS.SendSMS("+18573138300", "Hi " + orderItemRequest.getHospitalAdmin().getEmployee().getEmpName() + "," + "\nYour order# : " + orderItemRequest.getOrder().getItemID() + " is rejected\nMessage: " + message
                            + "\n\nThanks");
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                }
                //Send SMS end
                txtMessage.setText("");
                btnReject.setEnabled(false);
                btnDeliver.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Rejected");
            }
            txtMessage.setText("");
        }

    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMapActionPerformed
        // TODO add your handling code here:
        if (txtLocation.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter address first");
        } else {
            SwingUtilities.invokeLater(new Runnable() {

                @Override
                public void run() {
                    MapViewer browser = new MapViewer();
                    browser.setVisible(true);
                    browser.loadURL("https://www.google.com/maps/dir/?api=1&destination=" + txtLocation.getText().trim());
                }
            });
        }

    }//GEN-LAST:event_btnMapActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeliver;
    private javax.swing.JButton btnMap;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtPopulation;
    // End of variables declaration//GEN-END:variables
}
